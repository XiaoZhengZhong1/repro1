class zh {
	public static void main(String[] args) {
		//常量      java中的两种常量类型   常量如果是一个单词,所有字母都必须大写,如果是多个单词,每个单词都大写,中间用_下划线隔开
		// 1字面常量	1整数常量 2小数常量 3布尔常量(true和false) 4字符串常量("") 5字符常量('') 6空常量
		//	2自定义常量		
		
		//ASCII码表   'a'=97  'A'=65  '0'=48
		//java语言中字符shar能存储一给中文吗     答;可以 java语言采用的是unicode编码.unicode中每个字符占两个字节,一个中文也占两个字节


		//以下类容是数据类型转换之隐式转换.	
		//
		//int x = 3;								
		//byte b = 4;
	     //x = x + b;			//int整数类型和byte字节型相加.相当于四位数和一位数相加,一位数前面要补三个0,相加结果也是四位数.就是int整数型四个字节.
		//System.out.println(x);//因为上面已经标识了x是int类型,x+b结果也是int类型.是隐式转换.不需要加转换符
		
		//float f = 12.3f;			//后面加F是因为小数计算机默认的是double双精度浮点型.要转换成float就要加f.
		//long x = 12345;
			//f = x;					//把x的值赋值给f 就是把long长整型转换成float单精度小数点型.直接在后面加个小数点,就行,不影响结果.也属于隐式转换.
		//System.out.println(f);   	//输出结果是12345.0   表示float能储存long的值,证明fong的储存值比long大.
		//	x = f;					//表示把f的值赋值给x,就是把小数型强制转换成长整数型,数值的结果不一样,就是强制转换,
		//System.out.println(x);	//输出结果错误.可能会有损失,因为强制转换没有加转换符.因为f是float型.要把f转换成xlong型.就要加强制符long
		//x = (long) (f);
	    //System.out.println(x);	//加了强制转换符long后.输出结果是12  后面的小数直接被强制砍掉了
		
		
		
		//以下类容是数据类型转换之强制转换

		//int x = 3;				    //  数据类型转换之强制转换,   意思是,ing整数型四个字节和byte字节型一个字节相加本应该和上行一样.一个字节补上三个字节.
	     // byte b = 4;					//  相当于一个一位数前面加3个0.和四个字节码相当于和四个四位数相加.结果应该也是四个字节码int整数型,如果非要把结果四个
		 // b = (byte) (x + b); //字节码,int整数型改成一个字节码byte字节型(因为上行已经定义了b为byte字节型,x+b是整数相加是int型,就是把右边的int赋值给左边的byte)
	    
		// System.out.println(b);	         //就是强制转换!需要加强制转换符,改成什么类型就加什么类型.比如 b = x + b; 改成byte字节型就加byte字节符  b = (byte) (x + b);
									
	

	//面试题
										//	面试题.问b3输出有没有问题,
   /*	byte b1 = 3;						//答;有问题.  1   因为3和4是整数,整数系统默认是int整数型.byte和byte.或者short.shar,int,相加结果都会是int整数型.
	    byte b2 = 4;									   2  b1和b2是变量.计算机无法判断b的值是否在byte的取值范围类.
	    byte b3 = b1 + b2;
	    System.out.println(b3);					*/
		
		
		
		//byte b3 = 3 + 4;
		//System.out.println(b3);		//b3输出没问题因为java编译器有常量优化机制3和4都是常量.而且相加的和7也在byte的取值范围类.相当于b = 7所以没问题
		
		
		
		//以下类容是;字符和字符串参与运算;
		
		//System.out.println('a');			//输出结果是 a  因为在单引号里面,所以它是单字符.
		  //System.out.println('a' + 1);	//输出结果是 98 因为有ASCII码表.里面设定了a的值是int类型的97
		//	System.out.println("a" + 1);	//输出结果是 a1 因为 a 在 双引号 里面属于字符串.任何与字符串用 +  号相连接的都会被同化为字符串.	
		//System.out.println('a' + 1 + "a");	//输出结果是 98a 因为计算机的默认计算顺序是从左往右,就像我们做算术题一样
		//	System.out.println("a" + (1 + 1));	//输出结果是 a2 因为还是和我们做算术题一样.先算括号里面的.括号优先
		
	
	
	
	}
}
