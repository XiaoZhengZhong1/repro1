class  ysf {
	public static void main(String[] args) {
		/*以下类容是;运算符(operator)
		+ 号代表 正  加法  字符串连接.*/
		//System.out.println(10 / 3);				//输出结果是 3 因为计算机整数相除只能得到整数,要想得到小数必须把数据变成浮点类型
		//System.out.println(10 / 3.3);				//输出结果是 3.3  因为把其中任意一个变成小数.另一个也会换成小数来运算.就像我们算除法一样
			
			// % 在数字5的上面我们叫百分号 java里单独时叫 取模    运算时叫  摸鱼
		//System.out.println(3 % 5);					//输出结果是 3 因为计算机规定 摸鱼 计算中左边的绝对值小于右边时.结果是左边.
		//System.out.println(-13 % 5);					//运行结果是 -3 因为-13不是绝对值,虽然它比5小.但是还是取相除后的余数
		//System.out.println(5 % 5);				//输出结果是 0 因为计算机规定 摸鱼 计算中左边的绝对值等于.或者倍数于右边的绝对值时.结果为0
			//System.out.println(13 % 5);				//输出结果是 3 因为计算机规定 摸鱼 计算中左边的绝对值大于右边时.取余数(左边除右边的余数)
				//摸鱼 运算的结果只跟左边有关,和右边数值的正负无关.
				//%2 任何数正整数 摸鱼 2 结果不是0就是1.可以当作条件切换
					
				

				//算术运算法 自加  ++ 和 自减 -- 用法.
				// ++ 和 -- 单独使用 放变量前面和后面都一样,比喻 a++ 和 ++a 都是 a+1 的意思.	-- 同理		
			//int a = 3;
			//a++;	
		//System.out.println(a);			//输出结果为 4    因为a=3 a++=3+1=4
	
		// 当 ++ 参与运算时 
		//int a = 3;
		//int b = ++a;
		//System.out.println(b);			//输出结果为 4 相当于1+3的意思 计算机规定当 ++ 参与运算时++在自身左边比喻++a,先自身加1 再把加完后的值做赋值操作
		
				

		//int a = 3;	
		//int b = a++;
		//System.out.println(b);				//输出结果为 3 因为计算机规定,当 ++ 在自身右边,比喻 a++ 先把自身值做赋值操作.再自身加1
		// -- 同理
	
	
	
	
	}
}
