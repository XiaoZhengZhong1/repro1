/*
/*
###04.11_Java语言基础(循环结构循环嵌套输出4行5列的星星)
* A:案例演示
	* 需求：请输出一个4行5列的星星(*)图案。
	* 
			如图：
				*****
				*****
				*****
				*****
				
			注意：
				System.out.println("*");和System.out.print("*");的区别
* B:结论：
	* 外循环控制行数，内循环控制列数

###04.12_Java语言基础(循环结构循环嵌套输出正三角形)
* A:案例演示
* 
		需求：请输出下列的形状
		*
		**
		***
		****
		*****


*/
// 需求：请输出一个4行5列的星星(*)图案。
class  FFXT1
{
	public static void main(String[] args) 
	{
	/*	for (int a = 1;a <= 4 ;a++ )
		{for (int b = 1;b <= 5;b++ )
		{System.out.print("*");
		}
		System.out.println();
		}*/



/*需求：请输出下列的形状
		*
		**
		***
		****
		*****		*/

		/*for (int a = 1;a <= 5 ;a++ )
		{for (int b = 1 ;b <= a;b++ )	//分析思路:问题的*从上到下,个数是在发生变化的.而能决定打印个数的,是内循环的关系表达式b<=a
		{System.out.print("*");
		}
		System.out.println();	
		}*/
	
	
	//需求：请输出上列的形状,倒过来输出
		/*for (int a = 5;a >= 1 ;a-- )
		{for (int b = 1 ;b <= a;b++ )	//注意:如果输出空白,说明直接输出的最下面的空白括号.说明for里面的关系表达式不成立,有问题

		{System.out.print("*");
		}
		System.out.println();	
		}*/

/*###04.13_Java语言基础(循环结构九九乘法表)
* A:案例演示
	* 需求：在控制台输出九九乘法表。*/	
	
	/*for (int a = 1;a <=9 ;a++ ){
		for (int b = 1;b <= a ;b++ ){
			System.out.print("*");
	}
	System.out.println();
	}
/*	输出结果如下:和九九乘法表一样,再来分析如何把它换成数字形式.让它输出数字九九乘法表.格式是一样的,只有改 * 这个输出内容就
*
**
***
****
*****
******
*******
********
*********
*/	
	

	/*for (int a = 1;a <=9 ;a++ ){
		for (int b = 1;b <= a ;b++ ){
			System.out.print(b  + "*" + a + "=" + (b * a) + "\t");// \t 就是tab键,制表的意思,就是把输出的类容以,以制表的形式输出,如下图结果,用单引''号也可以
	}															  // \t \是转义符合.t是tab制表.\t就是转义成制表的意思
	System.out.println();
	}*/
//输出结果如下:
/*	
1*1=1
1*2=2   2*2=4
1*3=3   2*3=6   3*3=9
1*4=4   2*4=8   3*4=12  4*4=16
1*5=5   2*5=10  3*5=15  4*5=20  5*5=25
1*6=6   2*6=12  3*6=18  4*6=24  5*6=30  6*6=36
1*7=7   2*7=14  3*7=21  4*7=28  5*7=35  6*7=42  7*7=49
1*8=8   2*8=16  3*8=24  4*8=32  5*8=40  6*8=48  7*8=56  8*8=64
1*9=9   2*9=18  3*9=27  4*9=36  5*9=45  6*9=54  7*9=63  8*9=72  9*9=81	
	
*/
/*	
	注意：
		'\x' x表示任意，\是转义符号,这种做法叫转移字符。
		
		'\t'	tab键的位置
		'\r'	回车
		'\n'	换行
		'\"'
		'\''	
	*/	
	
//	'\'	tab键的位置
	
	System.out.println("\"");//如果不加 \ 会报错,加了 \ 就能输出一个 "  引号, \ 起到转义的作用,
	
	}
}
	

