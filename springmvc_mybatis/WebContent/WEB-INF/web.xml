<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>springmvc_mybatis</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!--先配置内容参数spring 里面包括: 数据库连接池   Mybatis的工厂    Mapper动态代理开发加强版  -->
  	<context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  	
  
  
  	<!-- 告诉web我们的前端配置 -->
    <!-- 前端控制器 的请求响应配置  表示所有以.action结尾的请求对找DispatcherServlet类,jar包配好的类-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 默认找 /WEB-INF/[servlet的名称]-servlet.xml 配上我们自己的初始化参数springmvc.xml-->		
    <!--初始化springmvc.xml文件中配有:配扫描@... 注解驱动   视图解释器  -->	
    		<init-param>
  				<param-name>contextConfigLocation</param-name>
  				<param-value>classpath:springmvc.xml</param-value>
  			</init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
  	<!-- 
  		1. /*  拦截所有   jsp  js png .css  真的全拦截   建议不使用
  		2. *.action *.do 拦截以do action 结尾的请求     肯定能使用   ERP  
  		3. /  拦截所有 （不包括jsp) (包含.js .png.css)  强烈建议使用     前台 面向消费者  www.jd.com/search   /对静态资源放行
  	 -->
  	<url-pattern>*.action</url-pattern>
    </servlet-mapping>
    
    
  
  
</web-app>